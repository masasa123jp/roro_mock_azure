/*
  styles.css – 共通スタイル

  このファイルでは、すべてのHTMLページで再利用されるスタイルを定義しています。
  スライド資料に示された「ベースカラー:#1F497D」「メインカラー:#FFC72C」
  「アクセントカラー:#FFFFFF」をCSS変数として定義し、サイト全体の色調を統一
  しています。また、フォームやボタン、ボトムナビゲーションなどの共通要素
  に対するデザインもここでまとめています。
*/

:root {
  --base-color: #1F497D;
  --main-color: #FFC72C;
  --accent-color: #FFFFFF;
  --light-bg: #F9F9F9;
  --text-color: #333333;
  --border-radius: 8px;
  /* ボトムナビゲーションの高さを広げてアクティブアイコン(60px)が収まるよう調整 */
  --nav-height: 80px;
  /* 追加: フォントやボタンの見た目の調整用のCSS変数 */
  --font-family: 'Yu Gothic', 'Hiragino Kaku Gothic ProN', 'Noto Sans JP', sans-serif;
  /* 透明感のあるボタンの背景色 (ガラス風) */
  --btn-glass-bg: rgba(255, 255, 255, 0.5);
  --btn-glass-border: rgba(255, 255, 255, 0.3);
  --btn-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

body {
  margin: 0;
  padding: 0;
  /* 全体のフォントを日本語含むモダンなファミリーに変更 */
  font-family: var(--font-family);
  background-color: var(--light-bg);
  color: var(--text-color);
  min-height: 100vh;
  box-sizing: border-box;
}

header {
  text-align: center;
  padding: 1rem 0.5rem;
}

.logo {
  max-width: 240px;
  width: 70%;
  height: auto;
  margin: 0 auto;
}

.small-logo {
  width: 36px;
  height: 36px;
  margin-right: 0.5rem;
}

.app-header {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 0.5rem 1rem;
  background-color: var(--base-color);
  color: var(--accent-color);
}

.app-header h2 {
  font-size: 1.2rem;
  margin: 0;
}

main {
  padding: 1rem;
  padding-bottom: calc(var(--nav-height) + 1rem);
}

h1 {
  font-size: 1.5rem;
  text-align: center;
  color: var(--base-color);
  margin-bottom: 1rem;
}

h2, h3, h4 {
  margin-top: 0;
}

.input-group {
  /* フォーム要素間の余白を少し広げて読みやすさを向上 */
  margin-bottom: 1.2rem;
  display: flex;
  flex-direction: column;
}

.input-group label {
  margin-bottom: 0.25rem;
  font-weight: bold;
}

.input-group input,
.input-group select {
  padding: 0.6rem;
  border: 1px solid #ccc;
  border-radius: var(--border-radius);
  font-size: 1rem;
  box-sizing: border-box;
}

.btn {
  display: inline-block;
  padding: 0.6rem 1.2rem;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s ease, filter 0.2s ease, box-shadow 0.2s ease;
  /* 透明感のあるスタイルを基本ボタンに適用 */
  background-color: var(--btn-glass-bg);
  border-color: var(--btn-glass-border);
  backdrop-filter: blur(6px);
  box-shadow: var(--btn-shadow);
}

/* 言語切替ボタン（右上グローブアイコン） */
.lang-toggle {
  margin-left: auto;
  width: 36px;
  height: 36px;
  border: none;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(4px);
}
.lang-toggle img {
  width: 28px;
  height: 28px;
  object-fit: contain;
  /* ダークなヘッダー上でもオリジナルの色で表示するためフィルタを無効化 */
  filter: none;
}

/* ログインページでは言語切替ボタンを大きく表示 */
.login-page .lang-toggle {
  width: 48px;
  height: 48px;
  /* Position the toggle next to the logo instead of pushing it to the far right */
  margin-left: 0.5rem;
  margin-right: 0;
}
.login-page .lang-toggle img {
  width: 40px;
  height: 40px;
}

/*
  Responsive layout tweaks for the login page

  The login screen is one of the first pages seen by the user, so it needs to
  display well across a variety of devices and orientations. Previously the
  combination of a large logo and generous padding caused important elements
  (email/password fields and buttons) to be pushed below the visible area on
  smaller screens or in landscape orientation. To remedy this we switch the
  page to a flex container, allow the main content to scroll if necessary and
  constrain the widths of the form and social login buttons. We also scale
  down the logo and headings on narrow screens.
*/
.login-page {
  /* Use flexbox to distribute header and main vertically and allow main to flex */
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/*
  Layout for the greeting and language toggle on the login page

  The greeting text (h1) and language toggle button should sit on the same
  horizontal line. This container centers its children and provides a small
  gap between them. The h1 itself has its margin reset to prevent extra
  spacing and to align properly with the button.
*/
.login-page .login-header {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
  text-align: center;
}
.login-page .login-header h1 {
  margin: 0;
}
/* Override default margins for the language toggle within the greeting area */
.login-page .login-header .lang-toggle {
  margin-left: 0;
  margin-right: 0;
}
.login-page header {
  /* Arrange the logo and language toggle horizontally and center them */
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  padding: 0.5rem 0.5rem;
}
.login-page main {
  /* Allow the main content to fill available space and scroll if content overflows */
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  overflow-y: auto;
  width: 100%;
  /* Reduce the bottom padding since the login page does not use bottom navigation */
  padding: 1rem;
}

/* Constrain the width of form elements and buttons on the login page */
.login-page form,
.login-page .social-login,
.login-page p {
  width: 100%;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

/* Tweak logo and heading sizes for very narrow screens */
@media (max-width: 600px) {
  .login-page .logo {
    /* Limit the logo size to avoid pushing content off screen */
    max-width: 180px;
    width: 60%;
    margin-top: 0.5rem;
  }
  .login-page h1 {
    font-size: 1.3rem;
    margin-bottom: 0.75rem;
  }
  .login-page main {
    padding: 0.5rem;
  }
}

/*
  Responsive layout tweaks for the signup page

  Similar to the login page, the signup page can become awkward on small
  screens because of the long form and generous spacing. We convert the page
  into a flex container so that the main content can scroll independently of
  the header, constrain the width of the form and social login buttons,
  and shrink the logo and heading on narrow viewports. These changes help
  prevent important fields or buttons from being pushed off the screen on
  phones in portrait or landscape orientation.
*/
.signup-page {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
.signup-page header {
  flex-shrink: 0;
  padding: 0.5rem 0.5rem;
}
.signup-page main.signup-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  overflow-y: auto;
  width: 100%;
  padding: 1rem;
}
.signup-page main.signup-container h1 {
  text-align: center;
  color: var(--base-color);
  margin-bottom: 1rem;
}
.signup-page #signup-form,
.signup-page .social-login,
.signup-page p {
  width: 100%;
  max-width: 450px;
  margin-left: auto;
  margin-right: auto;
}
@media (max-width: 600px) {
  .signup-page .logo {
    max-width: 180px;
    width: 60%;
    margin-top: 0.5rem;
  }
  .signup-page h1 {
    font-size: 1.3rem;
    margin-bottom: 0.75rem;
  }
  .signup-page main.signup-container {
    padding: 0.5rem;
  }
}


/* 雑誌グリッドの表紙画像を少し小さめにしてウィンドウに収まるよう調整 */
.magazine-card img {
  width: 100%;
  /* 画像はカード内に収まるよう縦横比を保持して縮小します */
  height: auto;
  max-height: 200px;
  object-fit: contain;
  display: block;
  /* 背景色を設定してレターボックスが自然に見えるようにする */
  background-color: #f9f9f9;
}

/* 雑誌ページ内の表紙画像の高さ調整 */
.magazine-viewer .book .page img {
  height: 50%;
  object-fit: cover;
}

.primary-btn {
  /* メインカラーのボタンもガラス風に調整 */
  background-color: rgba(255, 199, 44, 0.8);
  color: var(--base-color);
  border-color: rgba(255, 199, 44, 0.5);
  box-shadow: var(--btn-shadow);
}

.btn:hover {
  filter: brightness(0.95);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* セカンダリボタン: 透明度高めの白背景で控えめなボタン */
.secondary-btn {
  background-color: rgba(255, 255, 255, 0.6);
  color: var(--base-color);
  border-color: rgba(255, 255, 255, 0.4);
}

/* 危険操作用のボタン（例: 削除やログアウト） */
.danger-btn {
  background-color: rgba(231, 76, 60, 0.8);
  color: #ffffff;
  border-color: rgba(231, 76, 60, 0.5);
}

.danger-btn:hover {
  filter: brightness(0.95);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.social-login {
  margin-top: 1rem;
  text-align: center;
}

.social-login .btn {
  width: 100%;
  margin-bottom: 0.5rem;
}

.google-btn {
  background-color: #ffffff;
  color: #4285F4;
  border: 1px solid #ccc;
}

.line-btn {
  background-color: #06c755;
  color: #ffffff;
}

.bottom-nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: var(--nav-height);
  /* ナビゲーションバーは白背景にしてやわらかい印象に */
  background-color: #ffffff;
  display: flex;
  justify-content: space-around;
  align-items: center;
  border-top: 1px solid #e5e5e5;
  z-index: 1000;
}

.bottom-nav .nav-item {
  flex: 1;
  text-align: center;
  color: #666666;
  text-decoration: none;
  font-size: 0.7rem;
  padding-top: 0.3rem;
  box-sizing: border-box;
}

.bottom-nav .nav-item img {
  width: 24px;
  height: 24px;
  display: block;
  margin: 0 auto 2px auto;
}

.bottom-nav .nav-item.active {
  /* アクティブ時は文字色のみ変更し、背景色を塗りつぶさない */
  color: #45c397;
  background-color: transparent;
}

.bottom-nav .nav-item.active img {
  /* 選択中のアイコンは大きく表示し、色を塗りつぶさないようフィルタを無効化する */
  filter: none;
  width: 60px;
  height: 60px;
}

/* マップコンテナ */
#map {
  width: 100%;
  height: calc(100vh - var(--nav-height) - 50px);
}

/* 雑誌グリッドとカード */
.magazine-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.magazine-card {
  flex: 1 1 calc(50% - 1rem);
  background-color: #ffffff;
  border-radius: var(--border-radius);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

/* 雑誌カード内の表紙画像サイズを調整し、縦横比を維持したままカードに収まるようにする */
/* 雑誌カード内の表紙画像サイズを調整
   高さは自動で最大200pxまで、縦横比を維持しカード内に収まるようにする。
   背景色を設定してレターボックスが自然に見えるようにします。*/
.magazine-card img {
  width: 100%;
  height: auto;
  max-height: 200px;
  object-fit: contain;
  display: block;
  background-color: #f9f9f9;
}

.magazine-card .magazine-info {
  padding: 0.5rem;
}

@media (min-width: 768px) {
  .magazine-card {
    flex: 1 1 calc(33.333% - 1rem);
  }
}

/* プロフィール */
.profile-card {
  text-align: center;
  margin-bottom: 1rem;
}

.profile-card .avatar {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-color: #ccc;
  margin: 0 auto 0.5rem;
  background-image: url('../images/icon_profile.png');
  background-size: cover;
  background-position: center;
}

.profile-card .stats {
  display: flex;
  justify-content: space-around;
  margin: 1rem 0;
}

.profile-card .stats div {
  text-align: center;
}

.profile-card .stats strong {
  display: block;
  font-size: 1.3rem;
  margin-bottom: 0.2rem;
}

/* お気に入りリスト */
#favorites-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.favorite-item {
  background-color: #ffffff;
  padding: 0.75rem;
  margin-bottom: 0.5rem;
  border-radius: var(--border-radius);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
}

.favorite-item .details {
  flex: 1;
}

/* マップページ: カテゴリフィルタバー */
.category-bar {
  position: absolute;
  top: calc(60px + 0.5rem); /* ヘッダーの高さ+余白に合わせて配置 */
  left: 0;
  right: 0;
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  padding: 0.4rem 0.5rem;
  gap: 0.5rem;
  z-index: 5;
  /* 背景に軽い透過をかけ、地図を見やすく保つ */
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
}
.category-bar::-webkit-scrollbar {
  display: none; /* スクロールバー非表示 */
}
.filter-btn {
  white-space: nowrap;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 9999px;
  padding: 0.35rem 0.8rem;
  font-size: 0.8rem;
  background-color: rgba(255, 255, 255, 0.9);
  color: var(--base-color);
  display: flex;
  align-items: center;
  gap: 0.35rem;
  cursor: pointer;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s ease;
}
.filter-btn:hover {
  background-color: rgba(255, 255, 255, 1);
}
.filter-btn.active {
  background-color: var(--main-color);
  color: var(--base-color);
  border-color: var(--main-color);
}

/* レスポンシブ調整 */
@media (max-width: 600px) {
  /* マガジンカードは1列表示 */
  .magazine-card {
    flex: 1 1 100%;
    max-width: 100%;
  }
  /* ナビゲーションのフォントサイズを縮小 */
  .bottom-nav .nav-item span {
    font-size: 0.6rem;
  }
  /* フィルタバー位置調整 */
  .category-bar {
    top: calc(60px + 0.4rem);
  }
  /* プロフィールフォーム幅調整 */
  .profile-container form {
    padding: 0 0.5rem;
  }
}
@media (min-width: 600px) and (max-width: 900px) {
  .magazine-card {
    flex: 1 1 calc(50% - 1rem);
  }
}

.favorite-item a {
  color: var(--base-color);
  text-decoration: none;
  font-weight: bold;
}

.favorite-item button.remove-btn {
  /* お気に入り削除ボタンをガラス風の危険色ボタンに */
  background-color: rgba(231, 76, 60, 0.8);
  color: #ffffff;
  border: 1px solid rgba(231, 76, 60, 0.5);
  border-radius: var(--border-radius);
  padding: 0.4rem 0.8rem;
  font-size: 0.8rem;
  cursor: pointer;
  box-shadow: var(--btn-shadow);
}

.favorite-item button.remove-btn:hover {
  filter: brightness(0.95);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* チャットボックス */
#dify-chat {
  background-color: #ffffff;
  border-radius: var(--border-radius);
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/*
  外部チャットコンテナ

  Udify など外部サービスのチャット画面を iframe として取り込む際のスタイルです。
  従来のチャットボックスと同じような見た目になるよう、背景色・余白・角丸などを揃えています。
*/
.external-chat-container {
  background-color: #ffffff;
  border-radius: var(--border-radius);
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  /*
    画面下半分が余白にならないように、外部チャットの表示領域の高さを
    ビューポートの高さからヘッダーや説明文、ナビゲーションを差し引いて計算します。
    ここではおおよそ120pxをヘッダー＋説明文として見込み、
    ボトムナビの高さは CSS 変数 --nav-height を利用します。
  */
  height: calc(100vh - var(--nav-height) - 220px);
}

.external-chat-container iframe {
  /* 幅いっぱいに広げ、高さは状況に応じて変えられるよう自動伸縮 */
  width: 100%;
  flex: 1;
  border: none;
  border-radius: var(--border-radius);
  /* スクロールを iframe 内で行い、外側にはスクロールバーを出さない */
  overflow: hidden;
}

#dify-chat .chat-messages {
  flex: 1;
  /* チャットボックスの高さを広げて入力エリアの窮屈さを解消 */
  /* チャット表示エリアの高さを拡大 */
  max-height: 600px;
  overflow-y: auto;
  padding-right: 0.5rem;
}

#dify-chat .message {
  padding: 0.5rem;
  border-radius: var(--border-radius);
  margin-bottom: 0.5rem;
  max-width: 80%;
  line-height: 1.3;
}

#dify-chat .message.bot {
  background-color: var(--base-color);
  color: var(--accent-color);
  align-self: flex-start;
}

#dify-chat .message.user {
  background-color: var(--main-color);
  color: var(--base-color);
  align-self: flex-end;
}

#dify-chat form {
  display: flex;
  gap: 0.5rem;
}

#dify-chat input {
  flex: 1;
  padding: 0.5rem;
  border: 1px solid #ccc;
  border-radius: var(--border-radius);
  font-size: 1rem;
}

.note {
  font-size: 0.8rem;
  color: #666666;
  margin-top: 0.5rem;
}

/* マップページ用: 周辺表示ボタン */
.reset-btn {
  position: absolute;
  /* ボトムナビの上部に配置し、地図のUIと重ならないよう左側へ移動 */
  bottom: calc(var(--nav-height) + 1rem);
  left: 1rem;
  z-index: 5;
  background-color: var(--main-color);
  color: var(--base-color);
  border: none;
  border-radius: var(--border-radius);
  padding: 0.5rem 0.8rem;
  font-size: 0.8rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  cursor: pointer;
}

.reset-btn:hover {
  filter: brightness(0.95);
}

/* 雑誌閲覧オーバーレイ */
.magazine-viewer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000;
}
.magazine-viewer .book {
  position: relative;
  width: 90%;
  max-width: 600px;
  height: 80%;
  perspective: 1600px;
}
.magazine-viewer .book .page {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #F9E9F3;
  border-radius: var(--border-radius);
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
  /* 雑誌ページ全体のスクロールを無効にする */
  overflow: hidden;
  backface-visibility: hidden;
  transform-origin: left;
  transition: transform 0.8s ease;
}

/* 背表紙はクリック無効化 */
.magazine-viewer .book .page.back-cover {
  pointer-events: none;
}
.magazine-viewer .book .page.flipped {
  transform: rotateY(-180deg);
}
.magazine-viewer .book .page-content {
  padding: 1rem;
  box-sizing: border-box;
  height: 100%;
  /* 背表紙ページでスクロールバーが出ないよう全ページでオーバーフローを隠す */
  overflow-y: hidden;
}
/* 雑誌ページのフォントサイズを調整して読みやすくする */
.magazine-viewer .page-content h3 {
  font-size: 1.4rem;
}
/* 段落やリスト項目の文字サイズを大きくして読みやすく */
.magazine-viewer .page-content p,
.magazine-viewer .page-content li {
  font-size: 1.1rem;
  line-height: 1.6;
}
.magazine-viewer .nav-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  font-size: 2rem;
  color: #ffffff;
  cursor: pointer;
  user-select: none;
  z-index: 10;
}
.magazine-viewer .nav-arrow.prev {
  left: -40px;
}
.magazine-viewer .nav-arrow.next {
  right: -40px;
}
.magazine-viewer .close-btn {
  position: absolute;
  top: -40px;
  right: 0;
  font-size: 2rem;
  color: #ffffff;
  cursor: pointer;
  user-select: none;
  z-index: 10;
}